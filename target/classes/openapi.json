{
  "openapi" : "3.0.3",
  "info" : {
    "description" : "User Management",
    "title" : "Users",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "paths" : {
    "/user" : {
      "post" : {
        "operationId" : "createUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserDTO"
              }
            }
          },
          "description" : "Create user"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDTO"
                }
              }
            },
            "description" : "User created successfully."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Error while creating new user."
          }
        },
        "summary" : "Create user",
        "tags" : [ "User" ]
      }
    },
    "/userall" : {
      "get" : {
        "operationId" : "getUsers",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Userarray"
                }
              }
            },
            "description" : "Users found."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Users not found."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "unexpected error"
          }
        },
        "summary" : "Get all users",
        "tags" : [ "User" ]
      }
    },
    "/user/{id}" : {
      "delete" : {
        "operationId" : "deleteUser",
        "parameters" : [ {
          "description" : "User Id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDTO"
                }
              }
            },
            "description" : "User deleted successfully."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "User not found."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "User already deleted."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "unexpected error"
          }
        },
        "summary" : "Delete user",
        "tags" : [ "User" ]
      },
      "get" : {
        "operationId" : "getUserById",
        "parameters" : [ {
          "description" : "User Id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDTO"
                }
              }
            },
            "description" : "User found."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "User not found."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "User already deleted."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "unexpected error"
          }
        },
        "summary" : "Get user by Id",
        "tags" : [ "User" ]
      },
      "put" : {
        "operationId" : "updateUser",
        "parameters" : [ {
          "description" : "User Id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserDTO"
              }
            }
          },
          "description" : "Update user",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDTO"
                }
              }
            },
            "description" : "User updated successfully."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "User not found."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "User already deleted."
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "unexpected error"
          }
        },
        "summary" : "Update user",
        "tags" : [ "User" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "UserDTO" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "age" : {
            "format" : "int32",
            "type" : "integer"
          },
          "isDeleted" : {
            "type" : "boolean"
          },
          "createdOn" : {
            "type" : "string"
          },
          "updatedOn" : {
            "type" : "string"
          }
        },
        "required" : [ "age", "firstName", "lastName" ],
        "type" : "object"
      },
      "Userarray" : {
        "items" : {
          "$ref" : "#/components/schemas/UserDTO"
        },
        "type" : "array"
      },
      "Error" : {
        "properties" : {
          "code" : {
            "format" : "int32",
            "type" : "integer"
          },
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "code", "message" ],
        "type" : "object"
      }
    }
  }
}