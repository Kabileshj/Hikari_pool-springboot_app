openapi: 3.0.3
info:
  title: Users
  description: User Management
  version: 1.0.0
paths:
  /user:
    post:
      tags:
        - User
      summary: Create user
      operationId: createUser
      requestBody:
        description: Create user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: User created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
        default:
          description: Error while creating new user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /userall:
    get:
      tags:
        - User
      summary: Get all users
      operationId: getUsers
      responses:
        '200':
          description: Users found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Userarray"
        '404':
          description: Users not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/{id}:
    get:
      tags:
        - User
      summary: Get user by Id
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '400':
          description: User already deleted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - User
      summary: Update user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        '200':
          description: User updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '400':
          description: User already deleted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - User
      summary: Delete user
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User deleted successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '400':
          description: User already deleted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    UserDTO:
      type: object
      required:
        - firstName
        - lastName
        - age
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
          format: int32
        isDeleted:
          type: boolean
        createdOn:
          type: string
        updatedOn:
          type: string
    Userarray:
      type: array
      items:
        $ref: "#/components/schemas/UserDTO"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string